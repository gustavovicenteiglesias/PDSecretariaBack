{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","services/Axios1.tsx","services/Consulta.tsx","components/Gridejemplo1.js","components/Gridejemplo2.js","components/Tabla.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","Authorization","get","headers","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","key","path","a","console","log","CurrencyEditorBase","onValueChange","classes","Input","input","numericInput","root","fullWidth","undefined","inputProps","min","placeholder","event","targetValue","trim","parseInt","defaultProps","withStyles","theme","margin","spacing","fontSize","textAlign","width","FilterIcon","restProps","Icon","CurrencyEditor","RowDetail","row","escuelas","i","nombre","Popup","onApplyChanges","onCancelChanges","open","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","container","item","xs","FormGroup","TextField","label","legajo","especialidad","apellido","utils","MomentUtils","fecha_nacimiento","_","format","DialogActions","Button","onClick","color","PopupEditing","React","memo","popupComponent","editedRow","rowId","rows","getRowId","addedRows","editingRowIds","createRowChange","rowChanges","changeRow","changeAddedRow","commitChangedRows","commitAddedRows","stopEditRows","cancelAddedRows","cancelChangedRows","isNew","targetRow","filter","rowIds","changeArgs","change","exporterRef","useRef","startExport","useCallback","current","exportGrid","useState","selection","setSelection","setRows","getData","list","useEffect","title","columns","expandedRowIds","setExpandedRowIds","columnName","direction","sorting","setSorting","dateColumns","dateFilterOperations","currencyColumns","currencyFilterOperations","predicate","operation","split","IntegratedFiltering","defaultPredicate","filteringColumnExtensions","Paper","defaultCurrentPage","pageSize","onSelectionChange","onExpandedRowIdsChange","onSortingChange","for","availableFilterOperations","editorComponent","defaultFilters","columnExtensions","onCommitChanges","changedRows","changedRow","added","changed","startingAddedId","Object","keys","showAddCommand","showEditCommand","showFilterSelector","iconComponent","messages","month","contains","notContains","equal","notEqual","endsWith","startsWith","greaterThan","lessThan","lessThanOrEqual","greaterThanOrEqual","contentComponent","showSelectAll","onSave","workbook","xlsx","writeBuffer","buffer","saveAs","Blob","Example","BoardUser","hidden","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","includes","logout","Navbar","collapseOnSelect","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7ae791ca.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n     return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    //return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080S/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n export async function get<T>(\r\n    path: string\r\n): Promise<T> {\r\n    const { data } = await axios.get(path,{ headers: authHeader() });\r\n    console.log(data)\r\n    return data;\r\n};","import { useEffect, useState } from \"react\";\r\nimport { get } from \"./Axios1\";\r\nimport { Profesor , Profesores, Escuela} from \"./tipos\";\r\n\r\nexport const useGetProfe = () => {\r\n    const [profes , setProfes ] = useState<Profesor[]>([]);\r\n    const getData = async () => {\r\n      const  {list} = await get<Profesores>('http://secretaria-deportes.herokuapp.com/api/profesor/all');\r\n      setProfes(list)\r\n      }\r\n      useEffect(()=>{\r\n        getData()\r\n       \r\n  },[]);\r\n  \r\n    return profes;\r\n  }","import React, { useState,useEffect,useRef,useCallback } from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    RowDetailState, \r\n    SortingState,\r\n    IntegratedSorting ,\r\n    FilteringState,\r\n    DataTypeProvider,\r\n    IntegratedFiltering,\r\n    TreeDataState,\r\n    CustomTreeData,\r\n    SelectionState,\r\n  PagingState,\r\n  IntegratedPaging,\r\n  IntegratedSelection,\r\n    \r\n        } from '@devexpress/dx-react-grid';\r\nimport { GridExporter } from '@devexpress/dx-react-grid-export';      \r\nimport {\r\n    Grid,\r\n    Table,\r\n    TableHeaderRow,\r\n    TableGroupRow,\r\n    GroupingPanel,\r\n    TableSummaryRow,\r\n    TableSelection,\r\n    DragDropProvider,\r\n    TableFilterRow,\r\n    Toolbar,\r\n    ExportPanel,\r\n    TableRowDetail,\r\n    TableTreeColumn,\r\n    PagingPanel\r\n    \r\n  } from '@devexpress/dx-react-grid-material-ui';\r\n  import Input from '@material-ui/core/Input';\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import DateRange from '@material-ui/icons/DateRange';\r\n\r\nimport saveAs from 'file-saver';\r\n\r\nimport { get } from \"../services/Axios1\";\r\n\r\n\r\n\r\n\r\n\r\nconst FilterIcon = ({ type, ...restProps }) => {\r\n    if (type === 'month') return <DateRange {...restProps} />;\r\n    return <TableFilterRow.Icon type={type} {...restProps} />;\r\n  };\r\n\r\n  const styles = theme => ({\r\n    root: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    numericInput: {\r\n      fontSize: '14px',\r\n      textAlign: 'right',\r\n      width: '100%',\r\n    },\r\n  });\r\n  \r\n  const CurrencyEditorBase = ({ value, onValueChange, classes }) => {\r\n    const handleChange = (event) => {\r\n      const { value: targetValue } = event.target;\r\n      if (targetValue.trim() === '') {\r\n        onValueChange();\r\n        return;\r\n      }\r\n      onValueChange(parseInt(targetValue, 10));\r\n    };\r\n    return (\r\n      <Input\r\n        type=\"number\"\r\n        classes={{\r\n          input: classes.numericInput,\r\n          root: classes.root,\r\n        }}\r\n        fullWidth\r\n        value={value === undefined ? '' : value}\r\n        inputProps={{\r\n          min: 0,\r\n          placeholder: 'Filter...',\r\n        }}\r\n        onChange={handleChange}\r\n      />\r\n    );\r\n  };\r\n  \r\n  CurrencyEditorBase.propTypes = {\r\n    value: PropTypes.number,\r\n    onValueChange: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  CurrencyEditorBase.defaultProps = {\r\n    value: undefined,\r\n  };\r\n  \r\n  const CurrencyEditor = withStyles(styles)(CurrencyEditorBase)\r\n\r\nconst RowDetail = ({ row }) => (\r\n  row.escuelas.map((data,i)=>{\r\n    return(\r\n     \r\n      <div>\r\n       \r\n     {data.nombre}\r\n    </div>\r\n    )\r\n  })\r\n \r\n);\r\n\r\n    \r\n    const Tabla2 =  () => {\r\n      const exporterRef = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n  const [selection, setSelection] = useState([]);\r\n      console.log(\"Selection\")\r\n      console.log(selection)\r\n      const onSave = (workbook) => {\r\n        workbook.xlsx.writeBuffer().then((buffer) => {\r\n          saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');\r\n        });\r\n      };\r\n          \r\n    const URL='http://localhost:8080/api/profesor/all';\r\n    const [rows,setRows] = useState([]);\r\n    const getData = async () => {\r\n      const  {list} = await get(URL);\r\n      setRows(list)\r\n      }\r\n      useEffect(()=>{\r\n        getData()\r\n       console.log(\"paso por aca\")\r\n  },[]);\r\n\r\n    const [expandedRowIds, setExpandedRowIds] = useState([]);\r\n    console.log(\"data\")\r\n    \r\n    console.log(rows)\r\n    \r\n    const [columns] = useState([\r\n    { name: 'legajo', title: 'Legajo' },\r\n    { name: 'nombre', title: 'Nombre' },\r\n    { name: 'apellido', title: 'Apellido' },\r\n    { name: 'fechaIngreso', title: 'Fecha Ingreso' },\r\n    { name: 'fecha_nacimiento', title: 'Fecha Nacimiento' },\r\n    { name: 'especialidad', title: 'Especialidad' },\r\n    \r\n   ]);\r\n    const [sorting, setSorting] = useState([{ columnName: 'nombre', direction: 'asc' }]);\r\n    const [dateColumns] = useState(['fechaIngreso','fecha_nacimiento']);\r\n    const [dateFilterOperations] = useState(['month', 'contains', 'startsWith', 'endsWith']);\r\n    const [currencyColumns] = useState(['legajo']);\r\n    const [currencyFilterOperations] = useState([\r\n        'equal',\r\n        'notEqual',\r\n        'greaterThan',\r\n        'greaterThanOrEqual',\r\n        'lessThan',\r\n        'lessThanOrEqual',\r\n    ]);\r\n    const [tableColumnExtensions] = useState([\r\n      { columnName: 'escuelas', width: 300 },\r\n    ]);\r\n  \r\n    const [filteringColumnExtensions] = useState([\r\n    {\r\n      columnName: 'fechaIngreso',\r\n      predicate: (value, filter, row) => {\r\n        if (!filter.value.length) return true;\r\n        if (filter && filter.operation === 'month') {\r\n          const month = parseInt(value.split('-')[1], 10);\r\n          return month === parseInt(filter.value, 10);\r\n        }\r\n        return IntegratedFiltering.defaultPredicate(value, filter, row);\r\n      },\r\n    },\r\n    {\r\n        columnName: 'fecha_nacimiento',\r\n        predicate: (value, filter, row) => {\r\n          if (!filter.value.length) return true;\r\n          if (filter && filter.operation === 'month') {\r\n            const month = parseInt(value.split('-')[1], 10);\r\n            return month === parseInt(filter.value, 10);\r\n          }\r\n          return IntegratedFiltering.defaultPredicate(value, filter, row);\r\n        },\r\n      }\r\n  ]);\r\n  \r\n  \r\n \r\n  return (\r\n    <>\r\n   \r\n \r\n    <Paper>\r\n      <Grid\r\n        rows={rows}\r\n        columns={columns}\r\n        \r\n      >\r\n         <PagingState\r\n            defaultCurrentPage={0}\r\n            pageSize={6}\r\n          />\r\n          <SelectionState\r\n            selection={selection}\r\n            onSelectionChange={setSelection}\r\n          />\r\n          <IntegratedPaging />\r\n          <IntegratedSelection />\r\n          \r\n        <RowDetailState\r\n          expandedRowIds={expandedRowIds}\r\n          onExpandedRowIdsChange={setExpandedRowIds}\r\n        />\r\n\r\n        <SortingState\r\n          sorting={sorting}\r\n          onSortingChange={setSorting}\r\n        />\r\n         <IntegratedSorting />\r\n         <DataTypeProvider\r\n          for={dateColumns}\r\n          availableFilterOperations={dateFilterOperations}\r\n        />\r\n        <DataTypeProvider\r\n          for={currencyColumns}\r\n          availableFilterOperations={currencyFilterOperations}\r\n          editorComponent={CurrencyEditor}\r\n        />\r\n        <FilteringState defaultFilters={[]} />\r\n        <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n\r\n        <Table \r\n        columnExtensions={tableColumnExtensions}\r\n        />\r\n        \r\n        <TableHeaderRow showSortingControls />\r\n        <TableFilterRow\r\n          showFilterSelector\r\n          iconComponent={FilterIcon}\r\n          messages={{ month: 'Mes igual',\r\n                    contains: 'Contiene' ,\r\n                    notContains: 'No contiene',\r\n                    equal:'Igual',\r\n                    notEqual: 'No es igual' ,\r\n                    endsWith:'Termina con',\r\n                    startsWith: 'Empieza',\r\n                    greaterThan: 'Mayor ',\r\n                    lessThan:'Menor ',\r\n                    lessThanOrEqual:'Menor o igual',\r\n                    greaterThanOrEqual:'Mayor igual'\r\n                     }}\r\n        />\r\n        <TableRowDetail\r\n          contentComponent={RowDetail}\r\n        />\r\n          <TableSelection showSelectAll  />\r\n          <PagingPanel />\r\n      \r\n         <Toolbar />\r\n        \r\n        <ExportPanel startExport={startExport}/>\r\n      </Grid>\r\n      <GridExporter\r\n        ref={exporterRef}\r\n        rows={rows}\r\n        columns={columns}\r\n       \r\n        selection={selection}\r\n        sorting={sorting}\r\n        onSave={onSave}\r\n      />\r\n     \r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default Tabla2\r\n\r\n","import React, { useState ,useEffect,useRef,useCallback} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Plugin, Template, TemplateConnector, TemplatePlaceholder,\r\n} from '@devexpress/dx-react-core';\r\nimport { EditingState ,\r\n  RowDetailState, \r\n    SortingState,\r\n    IntegratedSorting ,\r\n    FilteringState,\r\n    DataTypeProvider,\r\n    IntegratedFiltering,\r\n    TreeDataState,\r\n    CustomTreeData,\r\n    SelectionState,\r\n  PagingState,\r\n  IntegratedPaging,\r\n  IntegratedSelection,\r\n} from '@devexpress/dx-react-grid';\r\nimport { GridExporter } from '@devexpress/dx-react-grid-export';  \r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableEditColumn,\r\n  TableGroupRow,\r\n    GroupingPanel,\r\n    TableSummaryRow,\r\n    TableSelection,\r\n    DragDropProvider,\r\n    TableFilterRow,\r\n    Toolbar,\r\n    ExportPanel,\r\n    TableRowDetail,\r\n    TableTreeColumn,\r\n    PagingPanel\r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiGrid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\n//import DateFnsUtils from '@date-io/date-fns'\r\nimport { get } from \"../services/Axios1\";\r\nimport Input from '@material-ui/core/Input';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport * as PropTypes from 'prop-types';\r\nimport saveAs from 'file-saver';\r\n/* eslint-disable no-shadow */\r\n\r\nconst FilterIcon = ({ type, ...restProps }) => {\r\n  if (type === 'month') return <DateRange {...restProps} />;\r\n  return <TableFilterRow.Icon type={type} {...restProps} />;\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  numericInput: {\r\n    fontSize: '14px',\r\n    textAlign: 'right',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst CurrencyEditorBase = ({ value, onValueChange, classes }) => {\r\n  const handleChange = (event) => {\r\n    const { value: targetValue } = event.target;\r\n    if (targetValue.trim() === '') {\r\n      onValueChange();\r\n      return;\r\n    }\r\n    onValueChange(parseInt(targetValue, 10));\r\n  };\r\n  return (\r\n    <Input\r\n      type=\"number\"\r\n      classes={{\r\n        input: classes.numericInput,\r\n        root: classes.root,\r\n      }}\r\n      fullWidth\r\n      value={value === undefined ? '' : value}\r\n      inputProps={{\r\n        min: 0,\r\n        placeholder: 'Filter...',\r\n      }}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nCurrencyEditorBase.propTypes = {\r\n  value: PropTypes.number,\r\n  onValueChange: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nCurrencyEditorBase.defaultProps = {\r\n  value: undefined,\r\n};\r\n\r\nconst CurrencyEditor = withStyles(styles)(CurrencyEditorBase)\r\n\r\nconst RowDetail = ({ row }) => (\r\nrow.escuelas.map((data,i)=>{\r\n  return(\r\n   \r\n    <div>\r\n     \r\n   {data.nombre}\r\n  </div>\r\n  )\r\n})\r\n\r\n);\r\n\r\nconst Popup = ({\r\n  row,\r\n  onChange,\r\n  onApplyChanges,\r\n  onCancelChanges,\r\n  open,\r\n}) => (\r\n  <Dialog open={open} onClose={onCancelChanges} aria-labelledby=\"form-dialog-title\">\r\n    <DialogTitle id=\"form-dialog-title\">Employee Details</DialogTitle>\r\n    <DialogContent>\r\n      <MuiGrid container spacing={3}>\r\n        <MuiGrid item xs={6}>\r\n          <FormGroup>\r\n            <TextField\r\n              margin=\"normal\"\r\n              name=\"nombre\"\r\n              label=\"Nombre\"\r\n              value={row.nombre || ''}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n            type=\"number\"\r\n              margin=\"normal\"\r\n              name=\"legajo\"\r\n              label=\"Legajo\"\r\n              value={row.legajo}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              name=\"especialidad\"\r\n              label=\"Especialidad\"\r\n              value={row.especialidad || ''}\r\n              onChange={onChange}\r\n            />\r\n          </FormGroup>\r\n        </MuiGrid>\r\n        <MuiGrid item xs={6}>\r\n          <FormGroup>\r\n            <TextField\r\n              margin=\"normal\"\r\n              name=\"apellido\"\r\n              label=\"Apellido\"\r\n              value={row.apellido || ''}\r\n              onChange={onChange}\r\n            />\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                label=\"Fecha Nacimiento\"\r\n                margin=\"normal\"\r\n                value={row.fecha_nacimiento}\r\n                onChange={(_, value) => onChange({\r\n                  target: { name: 'fecha_nacimiento', value },\r\n                })}\r\n                format=\"DD/MM/YYYY\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            \r\n          </FormGroup>\r\n        </MuiGrid>\r\n      </MuiGrid>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={onCancelChanges} color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n      <Button onClick={onApplyChanges} color=\"primary\">\r\n        Save\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n);\r\n\r\nconst PopupEditing = React.memo(({ popupComponent: Popup }) => (\r\n  <Plugin>\r\n    <Template name=\"popupEditing\">\r\n      <TemplateConnector>\r\n        {(\r\n          {\r\n            rows,\r\n            getRowId,\r\n            addedRows,\r\n            editingRowIds,\r\n            createRowChange,\r\n            rowChanges,\r\n          },\r\n          {\r\n            changeRow, changeAddedRow, commitChangedRows, commitAddedRows,\r\n            stopEditRows, cancelAddedRows, cancelChangedRows,\r\n          },\r\n        ) => {\r\n          const isNew = addedRows.length > 0;\r\n          let editedRow;\r\n          let rowId;\r\n          if (isNew) {\r\n            rowId = 0;\r\n            editedRow = addedRows[rowId];\r\n          } else {\r\n            [rowId] = editingRowIds;\r\n            const targetRow = rows.filter(row => getRowId(row) === rowId)[0];\r\n            editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n          }\r\n\r\n          const processValueChange = ({ target: { name, value } }) => {\r\n            const changeArgs = {\r\n              rowId,\r\n              change: createRowChange(editedRow, value, name),\r\n            };\r\n            if (isNew) {\r\n              changeAddedRow(changeArgs);\r\n            } else {\r\n              changeRow(changeArgs);\r\n            }\r\n          };\r\n          const rowIds = isNew ? [0] : editingRowIds;\r\n          const applyChanges = () => {\r\n            if (isNew) {\r\n              commitAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              commitChangedRows({ rowIds });\r\n             \r\n            }\r\n          };\r\n          const cancelChanges = () => {\r\n            if (isNew) {\r\n              cancelAddedRows({ rowIds });\r\n            } else {\r\n              stopEditRows({ rowIds });\r\n              cancelChangedRows({ rowIds });\r\n            }\r\n          };\r\n\r\n          const open = editingRowIds.length > 0 || isNew;\r\n          return (\r\n            <Popup\r\n              open={open}\r\n              row={editedRow}\r\n              onChange={processValueChange}\r\n              onApplyChanges={applyChanges}\r\n              onCancelChanges={cancelChanges}\r\n            />\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name=\"root\">\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name=\"popupEditing\" />\r\n    </Template>\r\n  </Plugin>\r\n));\r\n\r\nconst getRowId = row => row.id;\r\nexport default () => {\r\n  const exporterRef = useRef(null);\r\n\r\n  const startExport = useCallback(() => {\r\n    exporterRef.current.exportGrid();\r\n  }, [exporterRef]);\r\n  const [selection, setSelection] = useState([]);\r\n      console.log(\"Selection\")\r\n      console.log(selection)\r\n      const onSave = (workbook) => {\r\n        workbook.xlsx.writeBuffer().then((buffer) => {\r\n          saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');\r\n        });\r\n      };\r\n\r\n  const URL='http://localhost:8080/api/profesor/all';\r\n  const [rows,setRows] = useState([]);\r\n  const getData = async () => {\r\n    const  {list} = await get(URL);\r\n    setRows(list)\r\n    }\r\n    useEffect(()=>{\r\n      getData()\r\n     console.log(\"paso por aca\")\r\n},[]);\r\nconst [columns] = useState([\r\n  { name: 'legajo', title: 'Legajo' },\r\n  { name: 'nombre', title: 'Nombre' },\r\n  { name: 'apellido', title: 'Apellido' },\r\n  { name: 'fechaIngreso', title: 'Fecha Ingreso' },\r\n  { name: 'fecha_nacimiento', title: 'Fecha Nacimiento' },\r\n  { name: 'especialidad', title: 'Especialidad' },\r\n  \r\n ]);\r\n const [expandedRowIds, setExpandedRowIds] = useState([]);\r\n const [sorting, setSorting] = useState([{ columnName: 'nombre', direction: 'asc' }]);\r\n const [dateColumns] = useState(['fechaIngreso','fecha_nacimiento']);\r\n const [dateFilterOperations] = useState(['month', 'contains', 'startsWith', 'endsWith']);\r\n const [currencyColumns] = useState(['legajo']);\r\n const [currencyFilterOperations] = useState([\r\n     'equal',\r\n     'notEqual',\r\n     'greaterThan',\r\n     'greaterThanOrEqual',\r\n     'lessThan',\r\n     'lessThanOrEqual',\r\n ]);\r\n const [tableColumnExtensions] = useState([\r\n   { columnName: 'escuelas', width: 300 },\r\n ]);\r\n\r\n const [filteringColumnExtensions] = useState([\r\n {\r\n   columnName: 'fechaIngreso',\r\n   predicate: (value, filter, row) => {\r\n     if (!filter.value.length) return true;\r\n     if (filter && filter.operation === 'month') {\r\n       const month = parseInt(value.split('-')[1], 10);\r\n       return month === parseInt(filter.value, 10);\r\n     }\r\n     return IntegratedFiltering.defaultPredicate(value, filter, row);\r\n   },\r\n },\r\n {\r\n     columnName: 'fecha_nacimiento',\r\n     predicate: (value, filter, row) => {\r\n       if (!filter.value.length) return true;\r\n       if (filter && filter.operation === 'month') {\r\n         const month = parseInt(value.split('-')[1], 10);\r\n         return month === parseInt(filter.value, 10);\r\n       }\r\n       return IntegratedFiltering.defaultPredicate(value, filter, row);\r\n     },\r\n   }\r\n]);\r\n\r\n\r\n  const commitChanges = ({ added, changed }) => {\r\n    let changedRows;\r\n    let changedRow;\r\n    if (added) {\r\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0;\r\n      changedRows = [\r\n        ...rows,\r\n        ...added.map((row, index) => ({\r\n          id: startingAddedId + index,\r\n          ...row,\r\n        })),\r\n      ];\r\n    }\r\n    if (changed) {\r\n      changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row) );\r\n     console.log(Object.keys.length)\r\n     changedRow=Object.keys.length\r\n      \r\n    }\r\n    setRows(changedRows);\r\n    console.log(changedRows[changedRow])\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid\r\n        rows={rows}\r\n        columns={columns}\r\n        getRowId={getRowId}\r\n      >\r\n        <PagingState\r\n            defaultCurrentPage={0}\r\n            pageSize={6}\r\n          />\r\n          <SelectionState\r\n            selection={selection}\r\n            onSelectionChange={setSelection}\r\n          />\r\n          <IntegratedPaging />\r\n          <IntegratedSelection />\r\n          \r\n        <RowDetailState\r\n          expandedRowIds={expandedRowIds}\r\n          onExpandedRowIdsChange={setExpandedRowIds}\r\n        />\r\n\r\n        <SortingState\r\n          sorting={sorting}\r\n          onSortingChange={setSorting}\r\n        />\r\n         <IntegratedSorting />\r\n         <DataTypeProvider\r\n          for={dateColumns}\r\n          availableFilterOperations={dateFilterOperations}\r\n        />\r\n        <DataTypeProvider\r\n          for={currencyColumns}\r\n          availableFilterOperations={currencyFilterOperations}\r\n          editorComponent={CurrencyEditor}\r\n        />\r\n        <FilteringState defaultFilters={[]} />\r\n        <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n        <EditingState\r\n          onCommitChanges={commitChanges}\r\n        />\r\n        <Table />\r\n        <TableHeaderRow />\r\n\r\n        <TableEditColumn\r\n          showAddCommand\r\n          showEditCommand\r\n        />\r\n <TableFilterRow\r\n          showFilterSelector\r\n          iconComponent={FilterIcon}\r\n          messages={{ month: 'Mes igual',\r\n                    contains: 'Contiene' ,\r\n                    notContains: 'No contiene',\r\n                    equal:'Igual',\r\n                    notEqual: 'No es igual' ,\r\n                    endsWith:'Termina con',\r\n                    startsWith: 'Empieza',\r\n                    greaterThan: 'Mayor ',\r\n                    lessThan:'Menor ',\r\n                    lessThanOrEqual:'Menor o igual',\r\n                    greaterThanOrEqual:'Mayor igual'\r\n                     }}\r\n        />\r\n        <TableRowDetail\r\n          contentComponent={RowDetail}\r\n        />\r\n          <TableSelection showSelectAll  />\r\n          <PagingPanel />\r\n      \r\n         <Toolbar />\r\n        \r\n        <ExportPanel startExport={startExport}/>\r\n\r\n        <PopupEditing popupComponent={Popup} />\r\n      </Grid>\r\n      <GridExporter\r\n        ref={exporterRef}\r\n        rows={rows}\r\n        columns={columns}\r\n       \r\n        selection={selection}\r\n        sorting={sorting}\r\n        onSave={onSave}\r\n      />\r\n    </Paper>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useGetProfe} from '../services/Consulta'\r\nfunction Example() {\r\n  const [responsive, setResponsive] = useState('vertical');\r\n  const [tableBodyHeight, setTableBodyHeight] = useState('400px');\r\n  const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState('');\r\n  const [searchBtn, setSearchBtn] = useState(true);\r\n  const [downloadBtn, setDownloadBtn] = useState(true);\r\n  const [printBtn, setPrintBtn] = useState(true);\r\n  const [viewColumnBtn, setViewColumnBtn] = useState(true);\r\n  const [filterBtn, setFilterBtn] = useState(true);\r\n\r\n  const columns = ['legajo', 'nombre', 'apellido'];\r\n\r\n  const options = {\r\n    search: searchBtn,\r\n    download: downloadBtn,\r\n    print: printBtn,\r\n    viewColumns: viewColumnBtn,\r\n    filter: filterBtn,\r\n    filterType: 'dropdown',\r\n    responsive,\r\n    tableBodyHeight,\r\n    tableBodyMaxHeight,\r\n    onTableChange: (action, state) => {\r\n      console.log(action);\r\n      console.dir(state);\r\n    },\r\n  };\r\n\r\n  const data = useGetProfe();\r\n\r\n  return (\r\n    <>\r\n    <React.Fragment>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Responsive Option</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={responsive}\r\n          style={{ width: '200px', marginBottom: '10px', marginRight: 10 }}\r\n          onChange={e => setResponsive(e.target.value)}>\r\n          <MenuItem value={'vertical'}>vertical</MenuItem>\r\n          <MenuItem value={'standard'}>standard</MenuItem>\r\n          <MenuItem value={'simple'}>simple</MenuItem>\r\n\r\n          <MenuItem value={'scroll'}>scroll (deprecated)</MenuItem>\r\n          <MenuItem value={'scrollMaxHeight'}>scrollMaxHeight (deprecated)</MenuItem>\r\n          <MenuItem value={'stacked'}>stacked (deprecated)</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Table Body Height</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={tableBodyHeight}\r\n          style={{ width: '200px', marginBottom: '10px', marginRight: 10 }}\r\n          onChange={e => setTableBodyHeight(e.target.value)}>\r\n          <MenuItem value={''}>[blank]</MenuItem>\r\n          <MenuItem value={'400px'}>400px</MenuItem>\r\n          <MenuItem value={'800px'}>800px</MenuItem>\r\n          <MenuItem value={'100%'}>100%</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Max Table Body Height</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={tableBodyMaxHeight}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setTableBodyMaxHeight(e.target.value)}>\r\n          <MenuItem value={''}>[blank]</MenuItem>\r\n          <MenuItem value={'400px'}>400px</MenuItem>\r\n          <MenuItem value={'800px'}>800px</MenuItem>\r\n          <MenuItem value={'100%'}>100%</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Search Button</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={searchBtn}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setSearchBtn(e.target.value)}>\r\n          <MenuItem value={'true'}>{'true'}</MenuItem>\r\n          <MenuItem value={'false'}>{'false'}</MenuItem>\r\n          <MenuItem value={'disabled'}>disabled</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Download Button</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={downloadBtn}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setDownloadBtn(e.target.value)}>\r\n          <MenuItem value={'true'}>{'true'}</MenuItem>\r\n          <MenuItem value={'false'}>{'false'}</MenuItem>\r\n          <MenuItem value={'disabled'}>disabled</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Print Button</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={printBtn}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setPrintBtn(e.target.value)}>\r\n          <MenuItem value={'true'}>{'true'}</MenuItem>\r\n          <MenuItem value={'false'}>{'false'}</MenuItem>\r\n          <MenuItem value={'disabled'}>disabled</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">View Column Button</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={viewColumnBtn}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setViewColumnBtn(e.target.value)}>\r\n          <MenuItem value={'true'}>{'true'}</MenuItem>\r\n          <MenuItem value={'false'}>{'false'}</MenuItem>\r\n          <MenuItem value={'disabled'}>disabled</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Filter Button</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={filterBtn}\r\n          style={{ width: '200px', marginBottom: '10px' }}\r\n          onChange={e => setFilterBtn(e.target.value)}>\r\n          <MenuItem value={'true'}>{'true'}</MenuItem>\r\n          <MenuItem value={'false'}>{'false'}</MenuItem>\r\n          <MenuItem value={'disabled'}>disabled</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <MUIDataTable title={'ACME Employee list'} data={data} columns={columns} options={options} />\r\n    </React.Fragment>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Example;","import React, { Component } from \"react\";\r\nimport Grilla from './Gridejemplo';\r\nimport Grilla1 from './Gridejemplo1';\r\nimport Grilla2 from './Gridejemplo2'\r\nimport UserService from \"../services/user.service\";\r\nimport Tabla from './Tabla'\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n      hidden: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n \r\n   /* UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data,\r\n          hidden: false\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          hidden:true,\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );*/\r\n  } \r\n\r\n  render() {\r\n    return (\r\n    \r\n        <div hidden={false}>\r\n        \r\n        <Grilla2></Grilla2>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\n//import Tabla from './tabla'\r\n\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport {Navbar,Nav} from 'react-bootstrap'\r\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      \r\n        <>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"bg-color\" variant=\"light\">\r\n        <Navbar.Brand href=\"#home\">Secretaria de Educación </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/home\">Home</Nav.Link>\r\n        \r\n            {showModeratorBoard && (\r\n              \r\n              <Nav.Link href=\"/mod\">Moderator Board</Nav.Link>\r\n              \r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <Nav.Link href=\"/admin\">Admin</Nav.Link>\r\n              \r\n            )}\r\n\r\n            {currentUser && (\r\n              <Nav.Link href=\"/user\">Profesor</Nav.Link>\r\n              \r\n            )}\r\n    </Nav>\r\n    \r\n           \r\n          {currentUser ? (\r\n              <Nav>\r\n              <Nav.Link href=\"/profile\">{currentUser.username}</Nav.Link>\r\n              <Nav.Link href=\"/login\" onClick={this.logOut}>LogOut</Nav.Link>\r\n              </Nav>\r\n          ) : (\r\n            <Nav>\r\n            <Nav.Link href=\"/login\" >Login</Nav.Link>\r\n            <Nav.Link href=\"/register\" >Sign Up</Nav.Link>\r\n            </Nav>\r\n          )}\r\n          \r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            <Route path=\"/mod\" component={BoardModerator} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}